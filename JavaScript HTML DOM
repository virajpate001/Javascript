1) DOM (Document Object Model)
- With the HTML DOM, JavaScript can access and change all the elements of an HTML document.
- The HTML DOM is a standard for how to get, change, add, or delete HTML elements.

2) Finding HTML Elements:
a) document.getElementById(id)
b) document.getElementsByClassName(name)
c) document.getElementsByClassName(name)

3) Changing HTML Elements
a) element.innerHTML =  new html content
b) element.attribute = new value
c) element.style.property = new style

4) DOM Get Methods:
a) innerHTML 
b) innerText
c) getAttribute
d) getAttributeNode
e) Attributes

5) DOM Set Methods:
a) innerText
b) innerHTML
c) setAttrribute
d) Attrribute 
e) removeAttribute

6) Adding Events Handlers
- document.getElementById(id).onclick = function(){code}

7) DOM QuerySelector() & QuerySelectorAll() 
- document.querySelector(#id);
- document.querySelectorAll(#id);
- in both differnce is "querySelector" is target only first element & "querySelectorAll" target all available elements. 

8) Css Styling Method 
a) Style 
e.g : document.querySelector("#test").style.backgroundColor = "#000";

b) className
e.g. document.querySelector("#test").className = "viraj";

c) classList 
e.g. document.querySelector("#test").classList = "viraj";
     document.querySelector("#test").classList.add("xyz");
     document.querySelector("#test").classList.remove("xyz");
     document.querySelector("#test").classList.toggle("xyz");
     document.querySelector("#test").classList.contains("abc"); // check class is available or not 
     

9) addEventListener()
e.g: 1) first method 
         document.querySelector("#test").onclick = abc;
         function abc(){
         document.querySelector(".para").style.color = "#fff";
          }

      2) second Method 
        e.g: 
        - document.querySelector("#test").addEventListener("click",abc);
         function abc(){
         document.querySelector(".para").style.color = "#fff";
         }
        -  document.querySelector("#test").addEventListener("mouseenter",function(){
           document.querySelector(".para").style.color = "#fff";
           });

  10) Traversal Method
   A) ParentElement & ParentNode Method
   - target to parent of selected id or class. both are same.
     e.g: document.querySelector("#test").parentElement.style.background = "red";
       document.querySelector("#test").parentNode.style.background = "red";

   B) Children & ChildNodes Methods 
   - children target only tags. & childNodes target spaces,comment, text. 
     document.querySelector("#test").children[0].style.color = "red";
     document.querySelector("#test").childNodes[0].style.color = "red";

  C) FirstChild & LastChild Method .
 - firstElementChild :- document.querySelector("#test").firstElementChild.style.color = "red"
   firstChild : document.querySelector("#test").firstChild.style.color = "red";
   lastElementChild : document.querySelector("#test").lastElementChild.style.color = "red"
   lastChild : document.querySelector("#test").lastChild.style.color = "red"

 D) nextElementSibling & previousElementSibling 
 - nextElementSibling :- document.querySelector("#test").nextElementSibling.style.color = "red"
 - nextSibling :- document.querySelector("#test").nextSibling.style.color = "red"
 - previousElementSibling :- document.querySelector("#test").previousElementSibling.style.color = "red"
 - previousSibling :- document.querySelector("#test").previousSibling.style.color = "red"

11) Create Method:
 - a) Tag : createElement
   e.g : let crateele = document.createElement("p");
   b) Text : createTextNode
   e.g. : let crateText = document.createTextNode("This is viraj");
   c) Comment : createComment
   e.g. : let cratecom = document.createComment("This is comment");

12) Append Method:
 a) appendChild - create tag & inner text & use append child for insrting text in the tag.
   e.g - let newtag = document.createElement("h2")
         let innerText= document.createTextNode("This is Viraj");
         newtag.appendChild(innerText);
         document.querySelector("#test").appendChild(newtag);
 b) insertBefore
  e.g - var target = document.querySelector("#test");
        target.insertBefore(newtag,target.childNodes[0]);

c) insertAdjacentElement
 e.g : target.insertAdjacentElement("beforebegin",newtag);

d) insertAdjacentHTML
e.g : let newElement = "<h2>This is test</h2>"
      var target = document.querySelector("#test");
      target.insertAdjacentHTML("beforebegin",newElement);

e) insertAdjacentText
 e.g.var target = document.querySelector("#test");
     let newElement = "This is test"
     target.insertAdjacentText("beforebegin",newElement);

13) Replace & Remove Method:
  a) replaceChild():
  e.g. newTarget.replaceChild(target,oldText);
  b) removeChild():
 e.g. let newTarget = document.querySelector("#list");
      let oldText = newTarget.children[1];
      newTarget.removeChild(oldText);

14) Clone Node Method 
- e.g. 
  <ul id="list">
	<li>Red</li>
	<li>Pink</li>
	<li>White</li>
	<li>Yellow</li>
	<li>Black</li>
</ul>

<ul id="list2">
	<li>Viraj</li>
	<li>shu</li>
	<li>kar</li>
</ul>
 <script type="text/javascript">
 let clonechildren = document.querySelector("#list").children[1];
 let newClone = clonechildren.cloneNode(true);
 let newList = document.querySelector("#list2");
 newList.appendChild(newClone);
 </script>

      
